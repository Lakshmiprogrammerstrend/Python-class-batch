# -*- coding: utf-8 -*-
"""Iterators.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WknGwggNPWHfuPCDG5NQxN2LisrIlvw5
"""

##iter
#iterable
#iterator

#iteration

##iterable
list1 = [1,2,3,45,2,3,4]
for i in list1:
  print(i)

i = 0
while i<len(list1):
  print(list1[i])
  i = i+1

#iterator
list1 = [1,2,3,4,5,6,7]
myit = iter(list1)

print(next(myit))
print(next(myit))
print(next(myit))
print(next(myit))
print(next(myit))
print(next(myit))
print(next(myit))
print(next(myit))

class mynumber:
  def __iter__(self):
    self.a = 1
    return self
  def __next__(self):
    x = self.a
    self.a +=1
    return x

myclass = mynumber()
myiter  = iter(myclass)
print(next(myiter))
print(next(myiter))
print(next(myiter))
print(next(myiter))
print(next(myiter))
print(next(myiter))
print(next(myiter))
print(next(myiter))

class mynumber:
  def __iter__(self):
    self.a = 1
    return self
  def __next__(self):
    if self.a <=5:
       x = self.a
       self.a +=1
       return x
    else:
      raise StopIteration

myclass = mynumber()
myiter  = iter(myclass)
print(next(myiter))
print(next(myiter))
print(next(myiter))
print(next(myiter))
print(next(myiter))
print(next(myiter))

class mynumber:
  def __iter__(self):
    self.a = 1
    return self
  def __next__(self):
    if self.a <=5:
       x = self.a
       self.a +=1
       return x
    else:
      raise StopIteration

myclass = mynumber()
myiter  = iter(myclass)

for x in myiter:
  print(x)

try:
  list1 = [1,2,3,4,5,6,7]
  myiter = iter(list1)
  print(next(myiter))
  print(next(myiter))
  print(next(myiter))
  print(next(myiter))
  print(next(myiter))
  print(next(myiter))
  print(next(myiter))
  print(next(myiter))
Exception:
  print("StopIteration: ")
finally:
print("end")

dict = {"brand":"car",
        "model": "2seater",
        "year" : 2012}
print(dict)

print(len(dict))

print(type(dict))

dict = {"brand":"car",
        "model": "2seater",
        "year" : 2012,
        "color": ["red","white","black"]}
print(dict)

x = dict["model"]
print(x)

y = dict.get("model")
print(y)

x = dict.keys()
print(x)

y = dict.values()
print(y)

z = dict.items()
print(z)

for x,y in dict.items():
  print(x,y)

dict["year"] = 2020
print(dict)

dict["whells"] = 2
print(dict)

dict.update({"year":2023})
print(dict)

dict.update({"move":"drive"})
print(dict)

dict.pop("whells")
print(dict)

dict.popitem()
print(dict)

del dict["color"]
print(dict)

dict.clear()
print(dict)

dict0 = {"brand":"car",
        "model": "2seater",
        "year" : 2012}
dict1 = dict0

dict3 = dict0.copy()

print(dict0)
print("*******")
print(dict1)


print("*******")
print(dict3)

family = {"child1":{
                    "year":2007,
                    "name":"ram"},
          "child2":{
                    "year":2010,
                    "name":"lakshmi"},
          "child3":{
                    "year":2012,
                    "name":"hari"}
          }

print(family)

child1 ={
       "year":2007,
       "name":"ram"}
child2 ={
        "year":2010,
        "name":"lakshmi"}
child3 ={
         "year":2012,
         "name":"hari"}

family ={
          "child1":child1,
          "child2":child2,
          "child3":child3

}

print(family)

print("lakshmi \n durga")

print('it\'s alright')

print('it \\ s alright')

print("#")

print("lakshmi\t\tdurga")

print("lakshmi \bdurga")

def sum_even(list):
  sum = 0
  for i in list:
    if i%2 == 0:
         sum+=i
  return sum

list = [1,2,3,4,5,6]
var = sum_even(list)
print(var)

x = lambda a : a +10
print(x(10))

def myfun(n):
  return lambda a : a*n

mylist = myfun(3)
print(mylist(10))

