# -*- coding: utf-8 -*-
"""try-except.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e2Owd2olc_1RGjoklRrWl2SpUhnogyNI
"""

'''
read
append
write
create
'''

try:
  print(x)
except:
  print("an exception occurred")

print(x)

try:
  print(x)
except NameError:
  print("variable x is not defined")
except:
  print("somthing went wrong")

x = 2
print(x/0)

try:
  x = 2
  print(x/0)
except NameError:
  print("variable x is not defined")
except ZeroDivisionError:
  print("ZeroDivisionError")

try:
  print("hello")
except:
 print("somthing went wrong")
else:
  print("nothing went wrong")#does not raise any error

try:
  print(hello)
except :
 print("somthing went wrong")
else:
  print("nothing went wrong")

try:
  print(hello)
except :
 print("somthing went wrong")
finally:
  print("try-except is finished")

print(hello)

try:
  print("hello")
except :
 print("somthing went wrong")
finally:
  print("try-except is finished")

x = -1
if x<0:
  raise Exception("sorry,no number below zero")
#Exception:sorry,no number below zero

x = "hello"
if not type(x) is int:
  raise TypeError("only integers are allowed")

x = 4.5
if not type(x) is int:
  raise TypeError("only integers are allowed")

x = 4.5
if not type(x) is int:
  raise NameError("only integers are allowed")

try:
  x = int(input("enter number:"))
  print(x)
except:
  print("error")

try:
  x = int(input())
  print(x)
except:
  print("error")
#
#
finally:
  print("finished")

try:
  x = int(input())
  print(x)
except:
  print("error")
else:
  print("finish")

def is_odd(number):
  if number%2 ==0 :
    print("even")
  else:
    print("odd")

var = is_odd(2)
print(var)

def is_odd(number):
  if number%2 ==0 :
      return "even"
  return "odd"
var = is_odd(2)
print(var)

#start--end --even ---sum ---retun

try:
  def sum_of_even_numbers(start,end):
    total = 0
    for number in range (start,end+1):
      if number%2 ==0:
        total+=number
    return total

  start = int(input("enter starting number:"))
  end = int(input("enter end number"))

  result = sum_of_even_numbers(start,end)
  print(result)
except ValueError :
  print("ValueError")
finally:
  print("end")

try:
  def sum_of_even_numbers(start,end):
    total = 0
    for number in range (start,end+1):
      if number%2 ==0:
        total+=number
    return total

  start = int(input("enter starting number:"))
  end = int(input("enter end number"))

  result = sum_of_even_numbers(start,end)
  print(result)
except ValueError :
  print("ValueError")
else:
  print("end")

def divisor(n):
  x = len([ i for i in range(1,n+1) if not n%i])
  return x
print(divisor(12))

def divisor(n):
  x = len([ i for i in range(1,n+1) if not n%i])
  return x
print(divisor(2))

"""2%1 = 0
2%2 = 0
[1,2]
len([1,2])
2

[ i for i in range(1,n+1) if not n%i]==list
12%1=0
12%2=0
12%3=0
12%4 =0
12%5=2--#0

............
12%12

[1,2,3,4,6,12]
len([1,2,3,4,6,12])
6
"""

print(12%1)

try:
  def sum_of_even_numbers(start,end):
    total = 0
    for number in range (start,end+1):
      if number%2 ==0:
        total+=number
    return total

  start = int(input("enter starting number:"))
  end = int(input("enter end number"))

  result = sum_of_even_numbers(start,end)
  print(result)
except ZeroDivisionError :
  print("ValueError")
except:
  print("somthing")
finally:
  print("end")