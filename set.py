# -*- coding: utf-8 -*-
"""Set.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hEPf_vWEEDnyMdlWTvvNliheBRdNzQN7
"""

#set--group of itemes
#set--- unordered
#set --- duplicate not allowed
myset = {"apple","cherry","orange"}
print(myset)

print(type(myset))

myset = {"apple","cherry","orange","apple"}
print(myset)

for i in myset:
  print(i)

myset = {"apple","cherry","orange",True,1}
print(myset)

myset = {"apple","cherry","orange",False,0}
print(myset)

print(len(myset))

set1 = set(("orange",1,2.5,True))
print(set1)

print("apple" in set1)

#add
set1.add("apple")
print(set1)

#update()
set2 = {"mango","banana","cherry"}
set1.update(set2)
print(set1)

#remove
set1.remove("banana")
print(set1)

#discard
set1.discard(1)
print(set1)

#pop
x = set1.pop()
print(x)
print(set1)

#clear
set1.clear()
print(set1)

print(type([]))

print(type(()))

print(type({}))

print(type(set()))

#{}----empty dict
#set()--empty set

del set1
print(set1)

#methods
#union
set1 = {"a","b","c"}
set2 = {1,2,3}
set3 = set1.union(set2)
print(set3)

set3 = (set1|set2)
print(set3)

#intersection
x = {"apple","banana","cherry"}
y = {"google","apple","micro"}
z = x.intersection(y)
print(z)

z = (x&y)
print(z)

z = x.difference(y)
print(z)

z = y.difference(x)
print(z)

z = (x-y)
print(z)

z = x.symmetric_difference(y)
print(z)

Z = (x^y)
print(Z)

#is disjoint
x = {"apple","banana","cherry"}
y = {"google","facebook","micro"}
z = x.isdisjoint(y)
print(z)

x = {"a","b","c"}
y = {"f","e","d","c","b","a"}
z = x.issubset(y)
print(z)

z = y.issuperset(x)
print(z)

list1 = [1,2,3,45,1,6,True,False]
set1 = set(list1)
list1 = list(set1)
print(list1)

x = list(set(list1))
print(x)

x = ["a","b",1,2,100,1000]
y = ("a",1,2,3,4)
z = set(x)
p = set(y)
var1 = p.intersection(z)
print(var1)

z = set(x).intersection(set(y))
print(z)

x = [1,2,3,6,4]
y = (x,"y","z",1,2,3)
x[0] = 100
print(y)

x = [1,2,3,6,4]
y = [1,2,5,8,9,7]
z = list(set(x).union(set(y)))
print(z)

def is_prime(num):#1,2,3,5,7,11
  if num <=1:
    return False
  for i in range(2,int(num**0.5)+1):#3.1622=3+1=4(2,4)
    if num%i == 0:
      return False
    return True

is_prime(10)

is_prime(11)

list = [1,2,3,4,5]
max_var = list[0]
for i in list:
  if i>max_var:#1>1 ---2>1--2-----3>2---3----4>3--4----5>4---5
    max_var = i
print(max_var)

list_1 = [1,2,3,4,5]
k = int(input("enter number:"))
max_var = list[0]
list1= []
for i in list_1:
  if i>max_var:#1>1 ---2>1--2-----3>2---3----4>3--4----5>4---5
    max_var = i
    list1.append(max_var)#2,3,4,5
print(list1[-k])

def find_max(a,b,c):
  max_number = max(a,b,c)#5,6,7
  return max_number

num1 = float(input("enter 1st number:"))
num2 = float(input("enter 2nd number:"))
num3 = float(input("enter 3rd number:"))

maximum = find_max(num1,num2,num3)

print(f"the maximum number is  {maximum} ")

def empty():
  print(find_max(1,2,3)*3)
empty()

def find_max(a,b,c):
  max_number = max(a,b,c)#5,6,7
  print(max_number)

num1 = float(input("enter 1st number:"))
num2 = float(input("enter 2nd number:"))
num3 = float(input("enter 3rd number:"))

maximum = find_max(num1,num2,num3)

print(f"the maximum number is  {maximum} ")

def empty():
  print(find_max(1,2,3)*6)
empty()

