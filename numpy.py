# -*- coding: utf-8 -*-
"""NUMPY.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZSzk7kJ9eSZ25zCLe3LBfsbcMdCGw5J5
"""

#numpy-numerical python
! pip install numpy

import numpy as np
print(np.__version__)

arr = np.array([1,2,3,4,5])
print(arr)
print(type(arr))

arr1 = np.array((1,2,3,4,5))
print(arr1)
print(type(arr1))

#0D or Scalars

var = np.array(42)
print(var)
print(type(var))

#1D or unidimensional array
arr = np.array([1,2,3,4,5,6])
print(arr)

#2D  or matrix
arr = np.array([[1,2,3,4],[1,2,3,45]])
print(arr)

#3D aray or tensor
arr = np.array([[[1,2,3],[4,5,6]],[[1,2,3],[45,56,88]]])
print(arr)

a =  np.array(42)
b = np.array([1,2,3,4,5,6])
c = np.array([[1,2,3,4],[1,2,3,45]])
d = np.array([[[1,2,3],[4,5,6]],[[1,2,3],[45,56,88]]])

print(a.ndim)
print(b.ndim)
print(c.ndim)
print(d.ndim)

b = np.array([1,2,3,4,5,6],ndmin = 5)
print(b)
print(b.ndim)

b = np.array([1,2,3,4,5,6])
print(b[0])

print(b[-1])

print(b[0] + b[3])

c = np.array([[1,2,3,4],[1,2,3,45]])
print(c)
print(c[1,3])

print(c[0,2])

d = np.array([[[1,2,3],[4,5,6]],[[1,2,3],[45,56,88]]])
print(d)
print(d[0,1,2])

#slicing
a = np.array([1,2,3,4,5,6,4,7,8,9,4,10,12,3,4,5])
print(a[0:5])

print(a[3:])

print(a[:4])

print(c[-3:-1])

print(a[1:6:2])#[1,2,3,4,5,6,4,7,8,9,4,10,12,3,4,5])2,3,4,5,6

c = np.array([[1,2,3,4],[1,2,3,45]])
print(c[1,0:3])

print(c[0:2,2])

#datatypes
string ---- S
integer--- i
float  -----f
blooean ----b
complex ----C
unicode string ----- U

b = np.array([1,2,3,4,5,6])
print(b.dtype)

arr = np.array(["apple","orange","banana","cherry"])
print(arr.dtype)

b = np.array([1,2,3,4,5,6],dtype = "S")
print(b)
print(b.dtype)

b = np.array([1,2,3,4,5,6])
newarr =  b.astype("f")
print(newarr)
print(newarr.dtype)

newarr =  b.astype("int")
print(newarr)
print(newarr.dtype)

newarr =  b.astype(bool)
print(newarr)
print(newarr.dtype)

var = np.array([1,2,3,4,5,6])
y = var.copy()
print(var)
print(y)

var[0] = 100
print(var)
print(y)

var = np.array([1,2,3,4,5,6])
x = var.view()
print(var)
print(x)

var[0] = 1000
print(var)
print(x)

#list vs array
oD ----------Multi
any data type -----(any data type)single data type for single array
solw --- fast
remove,add -fast---method -professional
item side by side memory allocating -----------item side by side memory allocating